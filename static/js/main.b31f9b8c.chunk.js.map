{"version":3,"sources":["component/mock-data.js","component/Event.js","component/EventList.js","component/Alert.js","component/CitySearch.js","component/NumberOfEvents.js","component/api.js","App.js","serviceWorkerRegistration.js","reportWebVitals.js","index.js"],"names":["mockData","Event","state","showHideDetails","toggleEvent","setState","this","props","btnText","event","opened","className","summary","start","dateTime","location","description","onClick","Component","EventList","events","map","id","InfoAlert","color","getStyle","style","text","CitySearch","handleInputChanged","value","target","showSuggestions","suggestions","locations","filter","toUpperCase","indexOf","length","query","infoText","handleItemClicked","suggestion","updateEvents","undefined","type","placeholder","onChange","onFocus","display","NumberOfEvents","numberOfEvents","number","updateEventCount","e","getAccessToken","a","accessToken","localStorage","getItem","checkToken","tokenCheck","error","removeItem","searchParams","URLSearchParams","window","search","get","code","axios","results","authUrl","data","href","getToken","fetch","then","res","json","catch","result","getEvents","NProgress","startsWith","done","navigator","onLine","JSON","parse","token","url","extractLocations","setItem","stringify","encodeCode","encodeURIComponent","access_token","Set","App","currentLocation","locationEvents","slice","eventCount","mounted","Boolean","hostname","match","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","atatus","install","ReactDOM","render","StrictMode","document","getElementById","serviceWorker","ready","registration","unregister","console","message"],"mappings":"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","file":"static/js/main.b31f9b8c.chunk.js","sourcesContent":["const mockData = [\n    {\n        \"kind\": \"calendar#event\",\n        \"etag\": \"\\\"3181161784712000\\\"\",\n        \"id\": \"4eahs9ghkhrvkld72hogu9ph3e_20200519T140000Z\",\n        \"status\": \"confirmed\",\n        \"htmlLink\": \"https://www.google.com/calendar/event?eid=NGVhaHM5Z2hraHJ2a2xkNzJob2d1OXBoM2VfMjAyMDA1MTlUMTQwMDAwWiBmdWxsc3RhY2t3ZWJkZXZAY2FyZWVyZm91bmRyeS5jb20\",\n        \"created\": \"2020-05-19T19:17:46.000Z\",\n        \"updated\": \"2020-05-27T12:01:32.356Z\",\n        \"summary\": \"Learn JavaScript\",\n        \"description\": \"Have you wondered how you can ask Google to show you the list of the top ten must-see places in London? And how Google presents you the list? How can you submit the details of an application? Well, JavaScript is doing these. :) \\n\\nJavascript offers interactivity to a dull, static website. Come, learn JavaScript with us and make those beautiful websites.\",\n        \"location\": \"London, UK\",\n        \"creator\": {\n            \"email\": \"fullstackwebdev@careerfoundry.com\",\n            \"self\": true\n        },\n        \"organizer\": {\n            \"email\": \"fullstackwebdev@careerfoundry.com\",\n            \"self\": true\n        },\n        \"start\": {\n            \"dateTime\": \"2020-05-19T16:00:00+02:00\",\n            \"timeZone\": \"Europe/Berlin\"\n        },\n        \"end\": {\n            \"dateTime\": \"2020-05-19T17:00:00+02:00\",\n            \"timeZone\": \"Europe/Berlin\"\n        },\n        \"recurringEventId\": \"4eahs9ghkhrvkld72hogu9ph3e\",\n        \"originalStartTime\": {\n            \"dateTime\": \"2020-05-19T16:00:00+02:00\",\n            \"timeZone\": \"Europe/Berlin\"\n        },\n        \"iCalUID\": \"4eahs9ghkhrvkld72hogu9ph3e@google.com\",\n        \"sequence\": 0,\n        \"reminders\": {\n            \"useDefault\": true\n        },\n        \"eventType\": \"default\"\n    },\n    {\n        \"kind\": \"calendar#event\",\n        \"etag\": \"\\\"3181159875584000\\\"\",\n        \"id\": \"3qtd6uscq4tsi6gc7nmmtpqlct_20200520T120000Z\",\n        \"status\": \"confirmed\",\n        \"htmlLink\": \"https://www.google.com/calendar/event?eid=M3F0ZDZ1c2NxNHRzaTZnYzdubW10cHFsY3RfMjAyMDA1MjBUMTIwMDAwWiBmdWxsc3RhY2t3ZWJkZXZAY2FyZWVyZm91bmRyeS5jb20\",\n        \"created\": \"2020-05-19T19:14:30.000Z\",\n        \"updated\": \"2020-05-27T11:45:37.792Z\",\n        \"summary\": \"React is Fun\",\n        \"description\": \"Love HTML, CSS, and JS? Want to become a cool front-end developer? \\n\\nReact is one of the most popular front-end frameworks. There is a huge number of job openings for React developers in most cities. \\n\\nJoin us in our free React training sessions and give your career a new direction. \",\n        \"location\": \"Berlin, Germany\",\n        \"creator\": {\n            \"email\": \"fullstackwebdev@careerfoundry.com\",\n            \"self\": true\n        },\n        \"organizer\": {\n            \"email\": \"fullstackwebdev@careerfoundry.com\",\n            \"self\": true\n        },\n        \"start\": {\n            \"dateTime\": \"2020-05-20T14:00:00+02:00\",\n            \"timeZone\": \"Europe/Berlin\"\n        },\n        \"end\": {\n            \"dateTime\": \"2020-05-20T15:00:00+02:00\",\n            \"timeZone\": \"Europe/Berlin\"\n        },\n        \"recurringEventId\": \"3qtd6uscq4tsi6gc7nmmtpqlct\",\n        \"originalStartTime\": {\n            \"dateTime\": \"2020-05-20T14:00:00+02:00\",\n            \"timeZone\": \"Europe/Berlin\"\n        },\n        \"iCalUID\": \"3qtd6uscq4tsi6gc7nmmtpqlct@google.com\",\n        \"sequence\": 0,\n        \"reminders\": {\n            \"useDefault\": true\n        },\n        \"eventType\": \"default\"\n    },\n];\n\nexport { mockData };","import React, { Component } from \"react\";\nimport { mockData } from \"./mock-data\";\n\nclass Event extends Component {\n    state = {\n        showHideDetails: false\n    };\n\n    toggleEvent = () => {\n        this.setState({\n            showHideDetails: this.state.showHideDetails === true ? false : true\n        })\n    };\n\n    //mockData = JSON.parse(JSON.stringify(mockData));\n\n    render() {\n        var { btnText, event } = this.props;\n        const { opened } = this.state;\n\n        if (opened) {\n            btnText = 'Hide Details';\n        } else {\n            btnText = 'View Details';\n        }\n        // console.log(this.props)\n        return <div className=\"single-event\">\n            <h3 className=\"event-summary\">{this.props.event.summary}</h3>\n            <p className=\"event-start-date\">{this.props.event.start.dateTime}</p>\n            <p className=\"event-location\">{this.props.event.location}</p>\n\n            {this.state.showHideDetails && (\n                <div className=\"eventDetails\">\n                    <h2>About event:</h2>\n                    <p>{this.props.event.description}</p>\n                </div>\n            )}\n            <button className=\"toggleBtn\" onClick={this.toggleEvent}>\n                {!this.state.showHideDetails ? 'Shows Details' : 'Hide Details'}\n            </button>\n            <br />\n        </div>;\n    }\n}\nexport default Event;","import React, { Component } from 'react';\nimport Event from './Event';\n\nclass EventList extends Component {\n    render() {\n        const { events } = this.props;\n        return (\n            <ul className=\"EventList\">\n                {events.map(event =>\n                    <li key={event.id}>\n                        <Event event={event} />\n                    </li>\n                )}\n            </ul>\n        );\n    }\n}\n\nexport default EventList;","import React, { Component } from 'react';\n\nclass Alert extends Component {\n    constructor(props) {\n        super(props);\n        this.color = null;\n    }\n\n    getStyle = () => {\n        return {\n            color: this.color,\n        };\n    }\n\n    render() {\n        return (\n            <div className=\"Alert\">\n                <p style={this.getStyle()}>{this.props.text}</p>\n            </div>\n        );\n    }\n}\n\nclass InfoAlert extends Alert {\n    constructor(props) {\n        super(props);\n        this.color = 'blue';\n    }\n}\n\nexport { InfoAlert };","import React, { Component } from 'react';\nimport { InfoAlert } from './Alert';\n\nclass CitySearch extends Component {\n    constructor(props) {\n        super(props);\n\n        this.setState = {\n\n            query: '',\n            suggestions: [],\n            showSuggestions: undefined,\n            infoText: '',\n        };\n    }\n\n    handleInputChanged = (event) => {\n        const value = event.target.value;\n        this.setState({ showSuggestions: true });\n        const suggestions = this.props.locations.filter((location) => {\n            return location.toUpperCase().indexOf(value.toUpperCase()) > -1;\n        });\n        if (suggestions.length === 0) {\n            this.setState({\n                query: value,\n                infoText: 'We cannot find the city you are looking for. Please enter another city',\n            });\n        } else {\n            return this.setState({\n                query: value,\n                suggestions,\n                infoText: ''\n            });\n        }\n    };\n\n    handleItemClicked = (suggestion) => {\n        this.setState({\n            query: suggestion,\n            showSuggestions: false\n        });\n\n        this.props.updateEvents(suggestion);\n    }\n    render() {\n        return (\n            <div className=\"CitySearch\">\n                <InfoAlert text={this.state.infoText} />\n                <p>Search your city</p>\n                <input\n                    type=\"text\"\n                    className=\"city\"\n                    placeholder=\"Search for a city\"\n                    value={this.state.query}\n                    onChange={this.handleInputChanged}\n                    onFocus={() => { this.setState({ showSuggestions: true }) }}\n                />\n                <div>\n                    <ul className=\"suggestions\" style={this.state.showSuggestions ? {} : { display: 'none' }}>\n                        {this.state.suggestions.map((suggestion) => (\n                            <li\n                                key={suggestion}\n                                onClick={() => this.handleItemClicked(suggestion)}\n                            >{suggestion}</li>\n                        ))}\n                        <li onClick={() => this.handleItemClicked(\"all\")}>\n                            <b>See all cities</b>\n                        </li>\n                    </ul>\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default CitySearch;","import React, { Component } from 'react';\n\nclass NumberOfEvents extends Component {\n\n    state = {\n        numberOfEvents: 32,\n        infoText: \"\",\n    }\n\n    handleInputChanged = (event) => {\n        const number = event.target.value;\n        if (number <= 0 || number > 99) {\n            return this.setState({\n                //errorText: 'Please enter a number between 0 and 99',\n                numberOfEvents: ''\n            });\n        } else {\n            this.setState({\n                numberOfEvents: number,\n                //errorText: '',\n            });\n            this.props.updateEventCount(event.target.value);\n        }\n    };\n\n    render() {\n        return (\n            <div>\n                <p>Limit Search Results</p>\n\n                <input type=\"number\" id=\"numberInput\" value={this.state.numberOfEvents} className=\"numberInput\" onChange={(e) => this.handleInputChanged(e)} />\n            </div>\n        );\n    }\n}\n\nexport default NumberOfEvents;","import axios from 'axios';\nimport { mockData } from './mock-data';\nimport NProgress from 'nprogress';\n\nexport const getAccessToken = async () => {\n    const accessToken = localStorage.getItem('access_token');\n    const tokenCheck = accessToken && (await checkToken(accessToken));\n\n    if (!accessToken || tokenCheck.error) {\n        await localStorage.removeItem(\"access_token\");\n        const searchParams = new URLSearchParams(window.location.search);\n        const code = await searchParams.get(\"code\");\n        if (!code) {\n            const results = await axios.get(\n                \"https://rwmanw8a34.execute-api.eu-central-1.amazonaws.com/dev/api/get-auth-url\"\n            );\n            const { authUrl } = results.data;\n            return (window.location.href = authUrl);\n        }\n        return code && getToken(code);\n    }\n    return accessToken;\n}\n\nexport const checkToken = async (accessToken) => {\n    const result = await fetch(\n        `https://www.googleapis.com/oauth2/v1/tokeninfo?access_token=${accessToken}`\n    )\n        .then((res) => res.json())\n        .catch((error) => error.json());\n\n    return result;\n};\n\nexport const getEvents = async () => {\n    NProgress.start();\n\n    if (window.location.href.startsWith('http://localhost')) {\n        NProgress.done();\n        return mockData;\n    }\n\n    if (!navigator.onLine) {\n        const data = localStorage.getItem(\"lastEvents\");\n        NProgress.done();\n        return data ? JSON.parse(data).events : [];;\n    }\n\n    const token = await getAccessToken();\n\n    if (token) {\n        // To do : investigate purpose of removeQuery\n        //removeQuery();\n        const url = `https://rwmanw8a34.execute-api.eu-central-1.amazonaws.com/dev/api/get-events/${token}`;\n        const result = await axios.get(url);\n        if (result.data) {\n            var locations = extractLocations(result.data.events);\n            localStorage.setItem(\"lastEvents\", JSON.stringify(result.data));\n            localStorage.setItem(\"locations\", JSON.stringify(locations));\n        }\n        NProgress.done();\n        return result.data.events;\n    }\n};\n\nconst getToken = async (code) => {\n    const encodeCode = encodeURIComponent(code);\n    const { access_token } = await fetch(\n        `https://rwmanw8a34.execute-api.eu-central-1.amazonaws.com/dev/api/token/${encodeCode}`\n    )\n        .then((res) => {\n            return res.json();\n        })\n        .catch((error) => error);\n\n    access_token && localStorage.setItem(\"access_token\", access_token);\n\n    return access_token\n};\n\nconst removeQuery = () => {\n    if (window.history.pushState && window.location.pathname) {\n        var newurl =\n            window.location.protocal +\n            \"//\" +\n            window.location.host +\n            window.location.pathname;\n        window.history.pushState(\"\", \"\", newurl);\n    } else {\n        newurl = window.location.protocol + \"//\" + window.location.host;\n        window.history.pushState(\"\", \"\", newurl);\n    }\n};\n\nexport const extractLocations = (events) => {\n    var extractLocations = events.map((event) => event.location);\n    var locations = [...new Set(extractLocations)];\n    return locations;\n};\n\n\n\n\n\n\n\n\n\n","import React, { Component } from 'react';\nimport './App.css';\nimport EventList from './component/EventList';\nimport CitySearch from './component/CitySearch';\nimport NumberOfEvents from './component/NumberOfEvents';\nimport { extractLocations, getEvents } from './component/api';\nimport './nprogress.css';\n\nimport './App.css';\n\nclass App extends Component {\n  state = {\n    events: [],\n    locations: [],\n    currentLocation: \"all\",\n    numberOfEvents: 32,\n  }\n\n  componentDidMount() {\n    this.mounted = true;\n    getEvents().then((events) => {\n      if (this.mounted) {\n        this.setState({\n          events: events.slice(0, this.state.numberOfEvents),\n          locations: extractLocations(events)\n        });\n      }\n    });\n  }\n\n  componentWillUnmount() {\n    this.mounted = false;\n  }\n\n  updateEvents = (location) => {\n    getEvents().then((events) => {\n      //console.log(\"Events:\", events, this.state.numberOfEvents, location);\n      const locationEvents = (location === 'all') ?\n        events :\n        events.filter((event) => event.location === location);\n      //console.log(\"LocationsEvent:\", locationEvents);\n      this.setState({\n        events: locationEvents.slice(0, this.state.numberOfEvents)\n      });\n    });\n  }\n\n  updateEventCount = (eventCount) => {\n    const { currentLocation } = this.state;\n    this.setState({\n      numberOfEvents: eventCount\n    });\n    this.updateEvents(currentLocation, eventCount);\n  }\n  render() {\n    return (\n      <div className=\"App\">\n        <CitySearch locations={this.state.locations} updateEvents={this.updateEvents} />\n        <EventList events={this.state.events} />\n        <NumberOfEvents updateEventCount={(e) => this.updateEventCount(e)} />\n      </div>\n    );\n  }\n}\n\nexport default App;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://cra.link/PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(/^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/)\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://cra.link/PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then((registration) => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://cra.link/PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch((error) => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then((response) => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then((registration) => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log('No internet connection found. App is running in offline mode.');\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then((registration) => {\n        registration.unregister();\n      })\n      .catch((error) => {\n        console.error(error.message);\n      });\n  }\n}\n","const reportWebVitals = (onPerfEntry) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorkerRegistration from './serviceWorkerRegistration';\nimport reportWebVitals from './reportWebVitals';\nimport * as atatus from 'atatus-spa';\n\natatus.config('37019a187df6438c820c0b40a8846ef5').install();\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://cra.link/PWA\nserviceWorkerRegistration.unregister();\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n\n//atatus.notify(new Error('Test Atatus Setup'));"],"sourceRoot":""}