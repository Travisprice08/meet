{"version":3,"sources":["component/mock-data.js","component/Event.js","component/EventList.js","component/Alert.js","component/CitySearch.js","component/NumberOfEvents.js","component/EventGenre.js","WelcomeScreen.jsx","component/api.js","App.js","serviceWorkerRegistration.js","reportWebVitals.js","index.js"],"names":["mockData","Event","state","showHideDetails","toggleEvent","setState","JSON","parse","stringify","this","props","btnText","event","opened","Col","className","Card","Header","summary","Text","start","dateTime","location","description","Button","onClick","Component","EventList","events","map","id","Alert","getStyle","color","style","text","InfoAlert","ErrorAlert","WarningAlert","CitySearch","handleInputChanged","value","target","showSuggestions","suggestions","locations","filter","toUpperCase","indexOf","length","query","infoText","handleItemClicked","suggestion","updateEvents","undefined","type","placeholder","onChange","onFocus","display","NumberOfEvents","number","errorText","numberOfEvents","updateEventCount","e","EventGenre","useState","data","setData","genres","COLORS","useEffect","genre","split","includes","name","ResponsiveContainer","height","width","PieChart","Pie","cx","cy","labelLine","outerRadius","fill","dataKey","label","percent","toFixed","entry","index","Cell","WelcomeScreen","showWelcomeScreen","align","src","alt","getAccessToken","rel","href","a","accessToken","localStorage","getItem","checkToken","tokenCheck","error","removeItem","searchParams","URLSearchParams","window","search","get","code","axios","results","authUrl","getToken","fetch","then","res","json","catch","result","getEvents","NProgress","startsWith","done","navigator","onLine","token","url","extractLocations","setItem","encodeCode","encodeURIComponent","access_token","Set","App","currentLocation","warningText","eventCount","locationEvents","slice","getData","city","shift","mounted","isTokenValid","Container","Row","md","ScatterChart","margin","top","right","bottom","left","CartesianGrid","XAxis","YAxis","allowDecimals","Tooltip","cursor","strokeDasharray","Scatter","isLocalhost","Boolean","hostname","match","registerValidSW","swUrl","config","serviceWorker","register","registration","onupdatefound","installingWorker","installing","onstatechange","controller","console","log","onUpdate","onSuccess","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById","URL","process","origin","addEventListener","headers","response","contentType","status","ready","unregister","reload","checkValidServiceWorker","serviceWorkerRegistration"],"mappings":"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","file":"static/js/main.da9e02cb.chunk.js","sourcesContent":["const mockData = [\n    {\n        \"kind\": \"calendar#event\",\n        \"etag\": \"\\\"3181161784712000\\\"\",\n        \"id\": \"4eahs9ghkhrvkld72hogu9ph3e_20200519T140000Z\",\n        \"status\": \"confirmed\",\n        \"htmlLink\": \"https://www.google.com/calendar/event?eid=NGVhaHM5Z2hraHJ2a2xkNzJob2d1OXBoM2VfMjAyMDA1MTlUMTQwMDAwWiBmdWxsc3RhY2t3ZWJkZXZAY2FyZWVyZm91bmRyeS5jb20\",\n        \"created\": \"2020-05-19T19:17:46.000Z\",\n        \"updated\": \"2020-05-27T12:01:32.356Z\",\n        \"summary\": \"Learn JavaScript\",\n        \"description\": \"Have you wondered how you can ask Google to show you the list of the top ten must-see places in London? And how Google presents you the list? How can you submit the details of an application? Well, JavaScript is doing these. :) \\n\\nJavascript offers interactivity to a dull, static website. Come, learn JavaScript with us and make those beautiful websites.\",\n        \"location\": \"London, UK\",\n        \"creator\": {\n            \"email\": \"fullstackwebdev@careerfoundry.com\",\n            \"self\": true\n        },\n        \"organizer\": {\n            \"email\": \"fullstackwebdev@careerfoundry.com\",\n            \"self\": true\n        },\n        \"start\": {\n            \"dateTime\": \"2020-05-19T16:00:00+02:00\",\n            \"timeZone\": \"Europe/Berlin\"\n        },\n        \"end\": {\n            \"dateTime\": \"2020-05-19T17:00:00+02:00\",\n            \"timeZone\": \"Europe/Berlin\"\n        },\n        \"recurringEventId\": \"4eahs9ghkhrvkld72hogu9ph3e\",\n        \"originalStartTime\": {\n            \"dateTime\": \"2020-05-19T16:00:00+02:00\",\n            \"timeZone\": \"Europe/Berlin\"\n        },\n        \"iCalUID\": \"4eahs9ghkhrvkld72hogu9ph3e@google.com\",\n        \"sequence\": 0,\n        \"reminders\": {\n            \"useDefault\": true\n        },\n        \"eventType\": \"default\"\n    },\n    {\n        \"kind\": \"calendar#event\",\n        \"etag\": \"\\\"3181159875584000\\\"\",\n        \"id\": \"3qtd6uscq4tsi6gc7nmmtpqlct_20200520T120000Z\",\n        \"status\": \"confirmed\",\n        \"htmlLink\": \"https://www.google.com/calendar/event?eid=M3F0ZDZ1c2NxNHRzaTZnYzdubW10cHFsY3RfMjAyMDA1MjBUMTIwMDAwWiBmdWxsc3RhY2t3ZWJkZXZAY2FyZWVyZm91bmRyeS5jb20\",\n        \"created\": \"2020-05-19T19:14:30.000Z\",\n        \"updated\": \"2020-05-27T11:45:37.792Z\",\n        \"summary\": \"React is Fun\",\n        \"description\": \"Love HTML, CSS, and JS? Want to become a cool front-end developer? \\n\\nReact is one of the most popular front-end frameworks. There is a huge number of job openings for React developers in most cities. \\n\\nJoin us in our free React training sessions and give your career a new direction. \",\n        \"location\": \"Berlin, Germany\",\n        \"creator\": {\n            \"email\": \"fullstackwebdev@careerfoundry.com\",\n            \"self\": true\n        },\n        \"organizer\": {\n            \"email\": \"fullstackwebdev@careerfoundry.com\",\n            \"self\": true\n        },\n        \"start\": {\n            \"dateTime\": \"2020-05-20T14:00:00+02:00\",\n            \"timeZone\": \"Europe/Berlin\"\n        },\n        \"end\": {\n            \"dateTime\": \"2020-05-20T15:00:00+02:00\",\n            \"timeZone\": \"Europe/Berlin\"\n        },\n        \"recurringEventId\": \"3qtd6uscq4tsi6gc7nmmtpqlct\",\n        \"originalStartTime\": {\n            \"dateTime\": \"2020-05-20T14:00:00+02:00\",\n            \"timeZone\": \"Europe/Berlin\"\n        },\n        \"iCalUID\": \"3qtd6uscq4tsi6gc7nmmtpqlct@google.com\",\n        \"sequence\": 0,\n        \"reminders\": {\n            \"useDefault\": true\n        },\n        \"eventType\": \"default\"\n    },\n];\n\nexport { mockData };","import React, { Component } from \"react\";\nimport { mockData } from \"./mock-data\";\nimport Card from \"react-bootstrap/Card\";\nimport Button from \"react-bootstrap/Button\";\nimport Col from \"react-bootstrap/Col\"\n\nclass Event extends Component {\n    state = {\n        showHideDetails: false\n    };\n\n    toggleEvent = () => {\n        this.setState({\n            showHideDetails: this.state.showHideDetails === true ? false : true\n        })\n    };\n\n    mockData = JSON.parse(JSON.stringify(mockData));\n\n    render() {\n        var { btnText, event } = this.props;\n        const { opened } = this.state;\n\n        if (opened) {\n            btnText = 'Hide Details';\n        } else {\n            btnText = 'View Details';\n        }\n        // console.log(this.props)\n        return <Col className=\"single-event\">\n            <Card>\n                <Card.Header className=\"event-summary\">{this.props.event.summary}</Card.Header>\n                <Card.Text className=\"event-start-date\">{this.props.event.start.dateTime}</Card.Text>\n                <Card.Text className=\"event-location\">{this.props.event.location}</Card.Text>\n\n                {this.state.showHideDetails && (\n                    <div className=\"eventDetails\">\n                        <h2>About event:</h2>\n                        <p>{this.props.event.description}</p>\n                    </div>\n                )}\n                <Button className=\"toggleBtn\" onClick={this.toggleEvent}>\n                    {!this.state.showHideDetails ? 'Shows Details' : 'Hide Details'}\n                </Button>\n                <br />\n            </Card>\n        </Col>;\n    }\n}\nexport default Event;","import React, { Component } from 'react';\nimport Event from './Event';\n\nclass EventList extends Component {\n    render() {\n        const { events } = this.props;\n        return (\n            <ul className=\"EventList\">\n                {events.map(event =>\n                    <li key={event.id}>\n                        <Event event={event} />\n                    </li>\n                )}\n            </ul>\n        );\n    }\n}\n\nexport default EventList;","import React, { Component } from 'react';\n\nclass Alert extends Component {\n    constructor(props) {\n        super(props);\n        this.color = null;\n    }\n\n    getStyle = () => {\n        return {\n            color: this.color,\n        };\n    }\n\n    render() {\n        return (\n            <div className=\"Alert\">\n                <p style={this.getStyle()}>{this.props.text}</p>\n            </div>\n        );\n    }\n}\n\nclass InfoAlert extends Alert {\n    constructor(props) {\n        super(props);\n        this.color = 'blue';\n    }\n}\n\nclass ErrorAlert extends Alert {\n    constructor(props) {\n        super(props, \"orange\");\n    }\n}\n\nclass WarningAlert extends Alert {\n    constructor(props) {\n        super(props, \"red\");\n    }\n}\n\nexport { InfoAlert, ErrorAlert, WarningAlert };","import React, { Component } from 'react';\nimport { InfoAlert } from './Alert';\n\nclass CitySearch extends Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n\n            query: '',\n            suggestions: [],\n            showSuggestions: undefined,\n            infoText: '',\n        };\n    }\n\n    handleInputChanged = (event) => {\n        const value = event.target.value;\n        this.setState({ showSuggestions: true });\n        const suggestions = this.props.locations.filter((location) => {\n            return location.toUpperCase().indexOf(value.toUpperCase()) > -1;\n        });\n        if (suggestions.length === 0) {\n            this.setState({\n                query: value,\n                infoText: 'We cannot find the city you are looking for. Please enter another city',\n            });\n        } else {\n            return this.setState({\n                query: value,\n                suggestions,\n                infoText: ''\n            });\n        }\n    };\n\n    handleItemClicked = (suggestion) => {\n        this.setState({\n            query: suggestion,\n            showSuggestions: false\n        });\n\n        this.props.updateEvents(suggestion);\n    }\n    render() {\n        return (\n            <div className=\"CitySearch\">\n                <InfoAlert text={this.state.infoText} />\n                <p>Search your city</p>\n                <input\n                    type=\"text\"\n                    className=\"city\"\n                    placeholder=\"Search for a city\"\n                    value={this.state.query}\n                    onChange={this.handleInputChanged}\n                    onFocus={() => { this.setState({ showSuggestions: true }) }}\n                />\n                <div>\n                    <ul className=\"suggestions\" style={this.state.showSuggestions ? {} : { display: 'none' }}>\n                        {this.state.suggestions.map((suggestion) => (\n                            <li\n                                key={suggestion}\n                                onClick={() => this.handleItemClicked(suggestion)}\n                            >{suggestion}</li>\n                        ))}\n                        <li onClick={() => this.handleItemClicked(\"all\")}>\n                            <b>See all cities</b>\n                        </li>\n                    </ul>\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default CitySearch;","import React, { Component } from 'react';\nimport { ErrorAlert } from './Alert';\n\nclass NumberOfEvents extends Component {\n    constructor(props) {\n        super(props);\n        this.state = ({\n            errorText: '',\n            numberOfEvents: 12,\n        })\n    }\n\n    handleInputChanged = (event) => {\n        const number = event.target.value;\n        if (number <= 0 || number > 12) {\n            return this.setState({\n                errorText: 'Please enter a number between 0 and 12',\n                numberOfEvents: '0'\n            });\n        } else {\n            this.setState({\n                numberOfEvents: number,\n                errorText: '',\n            });\n            this.props.updateEventCount(event.target.value);\n        }\n    };\n\n    render() {\n        return (\n            <div className=\"events-number\">\n                <p className=\"results\">Limit Search Results</p>\n                <input type=\"number\" id=\"numberInput\" value={this.state.numberOfEvents} className=\"numberInput\" onChange={(e) => this.handleInputChanged(e)} />\n                <ErrorAlert text={this.state.errorText} />\n            </div>\n        );\n    }\n}\n\nexport default NumberOfEvents;","import { setCustomData } from 'atatus-spa';\nimport React, { useEffect, useState } from 'react';\nimport {\n    PieChart, Pie, Cell, ResponsiveContainer\n} from 'recharts';\n\nconst EventGenre = ({ events }) => {\n\n    const [data, setData] = useState([]);\n    // const setData = useState([]);\n    const genres = ['React', 'JavaScripst', 'Node', 'jQuery', 'AngularJS'];\n    const COLORS = ['#FCECDD', '#FEDDBE', '#FFC288', '#FEA82F', '#FF6701'];\n\n    //Example data to get pie chart to appear\n    // const data = [\n    //     { name: 'GROUP A', value: 400 },\n    //     { name: 'GROUP B', value: 300 },\n    //     { name: 'GROUP C', value: 200 },\n    //     { name: 'GROUP D', value: 100 }\n    // ]\n\n    const getData = () => {\n        const data = genres.map((genre) => {\n            const value = events.filter((event) =>\n                event.summary.split(' ').includes(genre)\n            ).length;\n            return { name: genre, value };\n        });\n        return data;\n    };\n\n    useEffect(() => { setData(() => getData()); }, [events]);\n\n    return (\n        <ResponsiveContainer height={400} width={400} >\n            <PieChart width={400} height={400}>\n                <Pie\n                    data={data}\n                    cx={200}\n                    cy={200}\n                    labelLine={false}\n                    outerRadius={80}\n                    fill=\"#8884d8\"\n                    dataKey=\"value\"\n                    label={({ name, percent }) => `${name} ${(percent * 100).toFixed(0)}%`}\n                >\n                    {data.map((entry, index) => (\n                        <Cell key={`cell-${index}`} fill={COLORS[index % COLORS.length]} />\n                    ))}\n                </Pie>\n            </PieChart>\n        </ResponsiveContainer>\n    );\n}\n\nexport default EventGenre;","import React from \"react\";\nimport './WelcomeScreen.css';\nfunction WelcomeScreen(props) {\n    return props.showWelcomeScreen ?\n        (\n            <div className=\"WelcomeScreen\">\n                <h1>Welcome to the Meet app</h1>\n                <h4>\n                    Log in to see upcoming events around the world for\n                    full-stack\n                    developers\n                </h4>\n                <div className=\"button_cont\" align=\"center\">\n                    <div className=\"google-btn\">\n                        <div className=\"google-icon-wrapper\">\n                            <img\n                                className=\"google-icon\"\n                                src=\"https://upload.wikimedia.org/wikipedia/commons/5/53/Google_%22G%22_Logo.svg\"\n                                alt=\"Google sign-in\"\n                            />\n                        </div>\n                        <button onClick={() => { props.getAccessToken() }}\n                            rel=\"nofollow noopener\"\n                            className=\"btn-text\"\n                        >\n                            <b>Sign in with google</b>\n                        </button>\n                    </div>\n                </div>\n                <a\n                    href=\"https://travisprice08.github.io/meet/privacy.html\"\n                    rel=\"nofollow noopener\"\n                >\n                    Privacy policy\n                </a>\n            </div>\n        )\n        : null\n}\nexport default WelcomeScreen;","import axios from 'axios';\nimport { mockData } from './mock-data';\nimport NProgress from 'nprogress';\n\nexport const getAccessToken = async () => {\n    const accessToken = localStorage.getItem('access_token');\n    const tokenCheck = accessToken && (await checkToken(accessToken));\n\n    if (!accessToken || tokenCheck.error) {\n        await localStorage.removeItem(\"access_token\");\n        const searchParams = new URLSearchParams(window.location.search);\n        const code = await searchParams.get(\"code\");\n        if (!code) {\n            const results = await axios.get(\n                \"https://rwmanw8a34.execute-api.eu-central-1.amazonaws.com/dev/api/get-auth-url\"\n            );\n            const { authUrl } = results.data;\n            return (window.location.href = authUrl);\n        }\n        return code && getToken(code);\n    }\n    return accessToken;\n}\n\nexport const checkToken = async (accessToken) => {\n    const result = await fetch(\n        `https://www.googleapis.com/oauth2/v1/tokeninfo?access_token=${accessToken}`\n    )\n        .then((res) => res.json())\n        .catch((error) => error.json());\n\n    return result;\n};\n\nexport const getEvents = async () => {\n    NProgress.start();\n\n    if (window.location.href.startsWith('http://localhost')) {\n        NProgress.done();\n        return mockData;\n    }\n\n    if (!navigator.onLine) {\n        const data = localStorage.getItem(\"lastEvents\");\n        NProgress.done();\n        return data ? JSON.parse(data).events : [];;\n    }\n\n    const token = await getAccessToken();\n\n    if (token) {\n        // To do : investigate purpose of removeQuery\n        //removeQuery();\n        const url = `https://rwmanw8a34.execute-api.eu-central-1.amazonaws.com/dev/api/get-events/${token}`;\n        const result = await axios.get(url);\n        if (result.data) {\n            var locations = extractLocations(result.data.events);\n            localStorage.setItem(\"lastEvents\", JSON.stringify(result.data));\n            localStorage.setItem(\"locations\", JSON.stringify(locations));\n        }\n        NProgress.done();\n        return result.data.events;\n    }\n};\n\nconst getToken = async (code) => {\n    const encodeCode = encodeURIComponent(code);\n    const { access_token } = await fetch(\n        `https://rwmanw8a34.execute-api.eu-central-1.amazonaws.com/dev/api/token/${encodeCode}`\n    )\n        .then((res) => {\n            return res.json();\n        })\n        .catch((error) => error);\n\n    access_token && localStorage.setItem(\"access_token\", access_token);\n\n    return access_token\n};\n\nconst removeQuery = () => {\n    if (window.history.pushState && window.location.pathname) {\n        var newurl =\n            window.location.protocal +\n            \"//\" +\n            window.location.host +\n            window.location.pathname;\n        window.history.pushState(\"\", \"\", newurl);\n    } else {\n        newurl = window.location.protocol + \"//\" + window.location.host;\n        window.history.pushState(\"\", \"\", newurl);\n    }\n};\n\nexport const extractLocations = (events) => {\n    var extractLocations = events.map((event) => event.location);\n    var locations = [...new Set(extractLocations)];\n    return locations;\n};\n\n\n\n\n\n\n\n\n\n","import React, { Component } from 'react';\nimport \"./App.css\";\nimport EventList from './component/EventList';\nimport CitySearch from './component/CitySearch';\nimport NumberOfEvents from './component/NumberOfEvents';\nimport EventGenre from './component/EventGenre';\nimport './nprogress.css';\nimport { Container, Row, Col } from 'react-bootstrap';\nimport { WarningAlert } from './component/Alert';\nimport WelcomeScreen from './WelcomeScreen';\nimport { extractLocations, getEvents, checkToken, getAccessToken } from './component/api';\nimport {\n  ScatterChart, Scatter, XAxis, YAxis, CartesianGrid, Tooltip, ResponsiveContainer\n} from 'recharts';\n\nclass App extends Component {\n  state = {\n    events: [],\n    locations: [],\n    currentLocation: \"all\",\n    numberOfEvents: 12,\n    warningText: \"\",\n    showWelcomeScreen: undefined\n  }\n\n  updateEventCount = (eventCount) => {\n    const { currentLocation } = this.state;\n    this.setState({\n      numberOfEvents: eventCount\n    });\n    this.updateEvents(currentLocation, eventCount);\n  }\n\n  updateEvents = (location) => {\n    // If offline\n    if (!navigator.onLine) {\n      this.setState({\n        warningText: \"You are offline, information may be inaccurate.\"\n      });\n    } else {\n      this.setState({\n        warningText: \"\"\n      });\n    }\n\n    getEvents().then((events) => {\n      //console.log(\"Events:\", events, this.state.numberOfEvents, location);\n      const locationEvents = (location === 'all') ?\n        events :\n        events.filter((event) => event.location === location);\n      //console.log(\"LocationsEvent:\", locationEvents);\n      this.setState({\n        events: locationEvents.slice(0, this.state.numberOfEvents)\n      });\n    });\n  }\n\n  getData = () => {\n    const { locations, events } = this.state;\n    const data = locations.map((location) => {\n      const number = events.filter((event) => event.location === location).length\n      const city = location.split(', ').shift()\n      return { city, number };\n    })\n    return data;\n  };\n\n  async componentDidMount() {\n    this.mounted = true;\n    const accessToken = localStorage.getItem('access_token');\n    const isTokenValid = (await checkToken(accessToken)).error ? false : true;\n    const searchParams = new URLSearchParams(window.location.search);\n    const code = searchParams.get(\"code\");\n    this.setState({ showWelcomeScreen: !(code || isTokenValid) });\n    if ((code || isTokenValid) && this.mounted) {\n      getEvents().then((events) => {\n        if (!navigator.onLine) {\n          this.setState({\n            warningText: \"You are offline, information may be inaccurate.\"\n          });\n        } else {\n          this.setState({\n            warningText: \"\"\n          });\n        }\n        if (this.mounted) {\n          this.setState({\n            events: events.slice(0, this.state.numberOfEvents),\n            locations: extractLocations(events)\n          });\n        }\n      });\n    }\n    if (window.location.href.startsWith(\"http://localhost\")) {\n      this.setState({\n        showWelcomeScreen: false\n      });\n    }\n  }\n\n\n  componentWillUnmount() {\n    this.mounted = false;\n  }\n\n  render() {\n    const { locations, numberOfEvents, events } = this.state\n    if (this.state.showWelcomeScreen === undefined) return <div className=\"App\" />\n    return (\n      <Container className=\"App\">\n        <Row>\n          <Col md={12}>\n            <WelcomeScreen showWelcomeScreen={this.state.showWelcomeScreen} getAccessToken={() => { getAccessToken() }} />\n          </Col>\n        </Row>\n        <Row style={{ display: this.state.showWelcomeScreen ? 'none' : 'block' }}>\n          <Col md={12}>\n            <h1>Meet App</h1>\n            {!navigator.onLine ? (<WarningAlert text='No internet connection' />) : (<WarningAlert text='' />)}\n          </Col>\n        </Row>\n        <Row style={{ display: this.state.showWelcomeScreen ? 'none' : 'block' }}>\n          <Col md={12}>\n            <CitySearch locations={this.state.locations} updateEvents={this.updateEvents} />\n          </Col>\n        </Row>\n        <Row style={{ display: this.state.showWelcomeScreen ? 'none' : 'block' }}>\n          <Col md={12}>\n            <NumberOfEvents updateEventCount={(e) => this.updateEventCount(e)} />\n          </Col>\n        </Row>\n        <Row style={{ display: this.state.showWelcomeScreen ? 'none' : 'block' }}>\n          <h4>Events in each city</h4>\n          <div className=\"data-vis-wrapper\">\n            <div className=\"pie-chart\">\n              <EventGenre events={events} />\n            </div>\n            <ResponsiveContainer height={400}>\n              <ScatterChart\n                width={800}\n                height={400}\n                margin={{\n                  top: 20, right: 20, bottom: 20, left: 20,\n                }}\n              >\n                <CartesianGrid />\n                <XAxis dataKey=\"city\" type=\"category\" name=\"city\" />\n                <YAxis allowDecimals={false} dataKey=\"number\" type=\"number\" name=\"number of events\" />\n                <Tooltip cursor={{ strokeDasharray: '3 3' }} />\n                <Scatter data={this.getData()} fill=\"#8884d8\" />\n              </ScatterChart>\n            </ResponsiveContainer>\n          </div>\n        </Row>\n        <Row className=\"EventList\" style={{ display: this.state.showWelcomeScreen ? 'none' : 'block' }}>\n          <Col md={12}>\n            <EventList events={this.state.events} />\n          </Col>\n        </Row>\n      </Container>\n    );\n  }\n}\n\nexport default App;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://cra.link/PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(/^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/)\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://cra.link/PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then((registration) => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://cra.link/PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch((error) => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then((response) => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then((registration) => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log('No internet connection found. App is running in offline mode.');\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then((registration) => {\n        registration.unregister();\n      })\n      .catch((error) => {\n        console.error(error.message);\n      });\n  }\n}\n","const reportWebVitals = (onPerfEntry) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorkerRegistration from './serviceWorkerRegistration';\nimport reportWebVitals from './reportWebVitals';\n// import * as atatus from 'atatus-spa';\n\n// atatus.config('37019a187df6438c820c0b40a8846ef5').install();\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://cra.link/PWA\nserviceWorkerRegistration.register();\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n\n//atatus.notify(new Error('Test Atatus Setup'));"],"sourceRoot":""}